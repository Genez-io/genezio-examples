{
  "version": 3,
  "sources": ["node_modules/@genezio/types/dist/cjs/index.js", "hello.ts", "testFunction.ts"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GenezioMethod = exports.GenezioDeploy = void 0;\n// Decorator that marks that a class should be deployed using genezio.\nfunction GenezioDeploy(_dict = {}) {\n    return (_ctor) => { };\n}\nexports.GenezioDeploy = GenezioDeploy;\n// Decorator that marks that a method should be deployed using genezio.\nfunction GenezioMethod(_dict = {}) {\n    return function (_target, _key, descriptor) {\n        let originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            return originalMethod.apply(this, args);\n        };\n        return descriptor;\n    };\n}\nexports.GenezioMethod = GenezioMethod;\n", "import { GenezioDeploy } from \"@genezio/types\";\r\nimport { testFunction } from \"./testFunction\";\r\n\r\nexport enum Season {\r\n  Winter = \"Winter\",\r\n  Summer = \"Summer\",\r\n}\r\n\r\n/**\r\n * This class represents a hello world server that can be deployed on genezio infrastructure\r\n * using \"genezio deploy\" command or tested locally using \"genezio local\".\r\n */\r\n@GenezioDeploy()\r\nexport class HelloWorld {\r\n  constructor() {\r\n    console.log(\"Constructor called!\");\r\n  }\r\n\r\n  /**\r\n   * Method that returns a \"Hello world\" message.\r\n   */\r\n  helloWorld() {\r\n    console.log(\"Hello world request received!\");\r\n    return \"Hello world!\";\r\n  }\r\n\r\n  /**\r\n   * Method that returns a personalized \"Hello world\" message.\r\n   */\r\n  hello(name: string, from: string, value: Season): string {\r\n    console.log(\r\n      `Hello world request received with name ${name} from ${from} value ${value}!`\r\n    );\r\n    // if (name.length > 3) {\r\n    //   throw new Error(\"Length too big\");\r\n    // }\r\n    let nameTested = testFunction(name);\r\n    const message = `Hello, ${nameTested}, from ${from} during this ${value}`;\r\n    console.log(message);\r\n\r\n    return message;\r\n  }\r\n}\r\n", "export function testFunction(name: string) {\r\n  if (name.length > 3) {\r\n    throw new Error(\"Length too big\");\r\n  }\r\n  return name;\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,gBAAgB,QAAQ,gBAAgB;AAEhD,aAASA,eAAc,QAAQ,CAAC,GAAG;AAC/B,aAAO,CAAC,UAAU;AAAA,MAAE;AAAA,IACxB;AACA,YAAQ,gBAAgBA;AAExB,aAAS,cAAc,QAAQ,CAAC,GAAG;AAC/B,aAAO,SAAU,SAAS,MAAM,YAAY;AACxC,YAAI,iBAAiB,WAAW;AAChC,mBAAW,QAAQ,YAAa,MAAM;AAClC,iBAAO,eAAe,MAAM,MAAM,IAAI;AAAA,QAC1C;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AACA,YAAQ,gBAAgB;AAAA;AAAA;;;AClBxB,mBAA8B;;;ACAvB,SAAS,aAAa,MAAc;AACzC,MAAI,KAAK,SAAS,GAAG;AACnB,UAAM,IAAI,MAAM,gBAAgB;AAAA,EAClC;AACA,SAAO;AACT;;;ADFO,IAAK,SAAL,kBAAKC,YAAL;AACL,EAAAA,QAAA,YAAS;AACT,EAAAA,QAAA,YAAS;AAFC,SAAAA;AAAA,GAAA;AAUL,IAAM,aAAN,MAAiB;AAAA,EACtB,cAAc;AACZ,YAAQ,IAAI,qBAAqB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa;AACX,YAAQ,IAAI,+BAA+B;AAC3C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,MAAc,MAAc,OAAuB;AACvD,YAAQ;AAAA,MACN,0CAA0C,IAAI,SAAS,IAAI,UAAU,KAAK;AAAA,IAC5E;AAIA,QAAI,aAAa,aAAa,IAAI;AAClC,UAAM,UAAU,UAAU,UAAU,UAAU,IAAI,gBAAgB,KAAK;AACvE,YAAQ,IAAI,OAAO;AAEnB,WAAO;AAAA,EACT;AACF;AA7Ba,aAAN;AAAA,MADN,4BAAc;AAAA,GACF;",
  "names": ["GenezioDeploy", "Season"]
}
